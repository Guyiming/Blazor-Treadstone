// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OpsMain.StorageLayer;

namespace OpsMain.StorageLayer.Migrations
{
    [DbContext(typeof(OpsDbContext))]
    [Migration("20210908024007_ConfigRelations")]
    partial class ConfigRelations
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OpsMain.StorageLayer.Entity.R_RoleMenu", b =>
                {
                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.Property<long>("MenuId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("RoleId", "MenuId");

                    b.HasIndex("MenuId");

                    b.ToTable("R_RoleMenu");
                });

            modelBuilder.Entity("OpsMain.StorageLayer.Entity.R_RoleUser", b =>
                {
                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("RoleId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("R_RoleUser");
                });

            modelBuilder.Entity("OpsMain.StorageLayer.Entity.SysMenu", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Href")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("菜单Url");

                    b.Property<string>("Icon")
                        .HasMaxLength(1100)
                        .HasColumnType("nvarchar(1100)")
                        .HasComment("菜单图标");

                    b.Property<string>("MenuName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("菜单名称");

                    b.Property<long>("OrderNo")
                        .HasColumnType("bigint");

                    b.Property<long?>("ParentId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("SysMenu");
                });

            modelBuilder.Entity("OpsMain.StorageLayer.Entity.SysRole", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("RoleName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("角色名称");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("SysRole");
                });

            modelBuilder.Entity("OpsMain.StorageLayer.Entity.SysUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("用户名");

                    b.HasKey("Id");

                    b.HasIndex("UserName");

                    b.ToTable("SysUser");
                });

            modelBuilder.Entity("OpsMain.StorageLayer.Entity.R_RoleMenu", b =>
                {
                    b.HasOne("OpsMain.StorageLayer.Entity.SysMenu", "Menu")
                        .WithMany("R_RoleMenus")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OpsMain.StorageLayer.Entity.SysRole", "Role")
                        .WithMany("R_RoleMenus")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menu");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("OpsMain.StorageLayer.Entity.R_RoleUser", b =>
                {
                    b.HasOne("OpsMain.StorageLayer.Entity.SysRole", "Role")
                        .WithMany("R_RoleUsers")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OpsMain.StorageLayer.Entity.SysUser", "User")
                        .WithMany("R_RoleUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OpsMain.StorageLayer.Entity.SysMenu", b =>
                {
                    b.HasOne("OpsMain.StorageLayer.Entity.SysMenu", "ParentMenu")
                        .WithMany("SubMenus")
                        .HasForeignKey("ParentId");

                    b.Navigation("ParentMenu");
                });

            modelBuilder.Entity("OpsMain.StorageLayer.Entity.SysMenu", b =>
                {
                    b.Navigation("R_RoleMenus");

                    b.Navigation("SubMenus");
                });

            modelBuilder.Entity("OpsMain.StorageLayer.Entity.SysRole", b =>
                {
                    b.Navigation("R_RoleMenus");

                    b.Navigation("R_RoleUsers");
                });

            modelBuilder.Entity("OpsMain.StorageLayer.Entity.SysUser", b =>
                {
                    b.Navigation("R_RoleUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
